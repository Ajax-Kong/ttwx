### direct log messages to stdout ###
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c(1):%L - %m%n
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH\:mm\:ss,SSS} %5p %c\:(%F\:%L) %n - %m%n
# %c 输出日记信息所属的类的全名
# %d 输出日记时间点的日期或时间，默许格式为ISO8601，也可以或许在厥后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出近似：2002-10-# 18- 22：10：28
# %f 输出日记信息所属的类的类名
# %l 输出日记事件的产生地位，即输出日记信息的语句处于它地点的类的第几行
# %m 输出代码中指定的信息，如log(message)中的message
# %n 输出一个回车换行符，Windows平台为“ ”，Unix平台为“ ”
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。假定是调用debug()输出的，则为DEBUG，依此类推
# %r 输出自利用启动到输出该日记信息所破钞的毫秒数
# %t 输生产生该日记事件的线程名
### set log levels - for more verbose logging change 'info' to 'debug' ###
log4j.rootLogger=info,console,LogFile,ErrorFile
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%t:%r] %-d{yyyy-MM-dd HH:mm:ss}(%c) - [%5p] %m%n

#
log4j.appender.LogFile= org.apache.log4j.DailyRollingFileAppender
log4j.appender.LogFile.File=${catalina.base}/logs/ttwx/app.log
log4j.appender.LogFile.Append=true
log4j.appender.LogFile.Threshold=debug
log4j.appender.LogFile.layout= org.apache.log4j.PatternLayout
log4j.appender.LogFile.layout.ConversionPattern=[%t:%r] %-d{yyyy-MM-dd HH:mm:ss}(%c) - [%5p] %m%n

log4j.appender.ErrorFile= org.apache.log4j.DailyRollingFileAppender
log4j.appender.ErrorFile.File=${catalina.base}/logs/ttwx/err.log
log4j.appender.ErrorFile.Append=true
log4j.appender.ErrorFile.Threshold=error
log4j.appender.ErrorFile.layout=org.apache.log4j.PatternLayout
log4j.appender.ErrorFile.layout.ConversionPattern=[%t:%r] %-d{yyyy-MM-dd HH:mm:ss}(%c) - [%5p] %m%n
#log4j.rootLogger=info,console
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH\:mm\:ss,SSS} %5p %c\:(%F\:%L) %n - %m%n

### direct messages to file hibernate.log ###
#log4j.appender.file=org.apache.log4j.FileAppender
#log4j.appender.file.File=hibernate.log
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n


#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL
log4j.logger.org.hibernate.SQL=debug

### log JDBC bind parameters ###
#log4j.logger.org.hibernate.type=info
#log4j.logger.org.hibernate.type=debug

### log schema export/update ###
log4j.logger.org.hibernate.hql=info
log4j.logger.org.hibernate.tool.hbm2ddl=info
#log4j.logger.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#log4j.logger.org.hibernate.type.descriptor.sql.BasicExtractor=TRACE
log4j.logger.com.fjx.wechat=debug
log4j.logger.com.fjx.common=info

### log cache activity ###
log4j.logger.org.hibernate.cache=debug

### log transaction activity
log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
